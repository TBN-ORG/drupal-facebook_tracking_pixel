<?php

/**
 * @file facebook_tracking_pixel.module
 * Facebook Tracking Module.
 */

/**
 * Implements hook_menu().
 */
function facebook_tracking_pixel_menu() {
  $items = array();

  $items['admin/config/system/facebook_tracking_pixel'] = array(
    'title' => 'Administer Facebook Tracking Pixel',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_tracking_pixel_settings_form'),
    'access arguments' => array('administer facebook tracking pixels'),
    'file' => 'facebook_tracking_pixel.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/system/facebook_tracking_pixel/default'] = array(
    'title' => 'Administer Facebook Tracking Pixel',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/config/system/facebook_tracking_pixel/path'] = array(
    'title' => 'Events by Path',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_tracking_pixel_track_by_path_form'),
    'access arguments' => array('administer facebook tracking pixels'),
    'file' => 'facebook_tracking_pixel.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/system/facebook_tracking_pixel/path/add'] = array(
    'title' => 'Add an event',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_tracking_pixel_path_add_form'),
    'access arguments' => array('administer facebook tracking pixels'),
    'file' => 'facebook_tracking_pixel.admin.path.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/system/facebook_tracking_pixel/path/delete'] = array(
    'title' => 'Delete an event',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_tracking_pixel_path_delete_form'),
    'access arguments' => array('administer facebook tracking pixels'),
    'file' => 'facebook_tracking_pixel.admin.path.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/system/facebook_tracking_pixel/path/edit'] = array(
    'title' => 'Delete an event',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_tracking_pixel_path_edit_form'),
    'access arguments' => array('administer facebook tracking pixels'),
    'file' => 'facebook_tracking_pixel.admin.path.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function facebook_tracking_pixel_permission() {
  $permissions['administer facebook tracking pixels']['title'] = t('Administer Facebook Tracking Pixels.');

  return $permissions;
}

/**
 * Implements hook_page_build().
 */
function facebook_tracking_pixel_page_build(&$page) {
  // This module is disabled if the admin has not agreed to responsibility
  // for the code that will be inserted into the website.
  $agree = variable_get('facebook_tracking_pixel_global_agree' . FALSE);
  if ($agree) {
    // Optional weights.
    $weight = variable_get('facebook_tracking_pixel_weight_js', JS_THEME);
    $files = file_scan_directory(variable_get('facebook_tracking_pixel_path', 'public://facebook_tracking_pixel'), '/.*\.js$/');
    if (!empty($files)) {
      // Only proceed if either this is not an admin page or if the 'load on
      // admin pages too' option was checked.
      $page_is_admin = path_is_admin(current_path());
      $force_on_admin = (bool) variable_get('facebook_tracking_pixel_admin', FALSE);
      if (!$page_is_admin || $force_on_admin) {
        $i = 0;
        foreach ($files as $key => $value) {
          $page['content']['#attached']['js']['facebook_tracking_pixel_' . $i] = array(
            'type' => 'file',
            'group' => JS_THEME,
            'weight' => $weight - 2,
            'data' => $key,
            'preprocess' => (bool) variable_get('facebook_tracking_pixel_aggregation', FALSE),
          );
          $i++;
        }
      }
    }
    $noscripts = variable_get('facebook_tracking_pixel_noscripts', NULL);
    $element = array(
      '#type' => 'markup',
      '#markup' => '<noscript>' . $noscripts . '</noscript>',
      '#weight' => 200,
    );
    drupal_add_html_head($element, 'facebook_tracking_pixel_noscript');
  }
}

/**
 * Deletes CSS & JavaScript from the file system (but only if it exists).
 */
function facebook_tracking_pixel_delete_file() {
  $path = variable_get('facebook_tracking_pixel_path', 'public://facebook_tracking_pixel');

  if (!$files = file_scan_directory($path, '/.*\.js$/')) {
    foreach ($files as $key => $value) {
      file_unmanaged_delete($path . '/' . $key);
    }
    return TRUE;
  }
  return FALSE;
}

/**
 * Saves CSS & JavaScript in the file system (but only if not empty).
 */
function facebook_tracking_pixel_save_file($data, $filename) {
  if (!drupal_strlen(trim($data))) {
    return FALSE;
  }
  $path = variable_get('facebook_tracking_pixel_path', 'public://facebook_tracking_pixel');
  file_prepare_directory($path, FILE_CREATE_DIRECTORY);
  $file_saved = file_unmanaged_save_data($data, $path . '/' . $filename, FILE_EXISTS_REPLACE);

  // Trigger reloading the CSS and JS file cache in AdvAgg, if available.
  if ($file_saved && module_exists('advagg')) {
    module_load_include('inc', 'advagg', 'advagg.cache');
    advagg_push_new_changes();
  }

  return $file_saved;
}

/**
 * Return keyed array of standard events.
 *
 * @return array
 */

function facebook_tracking_pixel_events(){
  $events = [];
  $events['pageview'] = ['name' => 'Key Page View', 'code' => 'fbq(\'track\', \'ViewContent\');'];
  $events['search'] = ['name' => 'Search', 'code' => 'fbq(\'track\', \'Search\');'];
  $events['addtocart'] = ['name' => 'Add to Cart', 'code' => 'fbq(\'track\', \'AddToCart\');'];
  $events['addtowish'] = ['name' => 'Add to Wishlist', 'code' => 'fbq(\'track\', \'AddToWishlist\');'];
  $events['checkoutstart'] = ['name' => 'Initiate checkout', 'code' => 'fbq(\'track\', \'InitiateCheckout\');'];
  $events['addpayment'] = ['name' => 'Add Payment Info', 'code' => 'fbq(\'track\', \'AddPaymentInfo\')'];
  $events['lead'] = ['name' => 'Lead', 'code' => 'fbq(\'track\', \'Lead\');'];
  $events['registration'] = ['name' => 'Complete Registration', 'code' => 'fbq(\'track\', \'CompleteRegistration\');'];
  return $events;

}