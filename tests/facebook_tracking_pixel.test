<?php

/**
 * @file
 * Contains tests for the Facebook Tracking Pixel module.
 */

/**
 * Test case.
 */
class FacebookTrackingPixelTestCase extends DrupalWebTestCase {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return [
      'name' => t('Facebook Tracking Pixel tests'),
      'description' => t('Place tracking pixel onto a site and control events.'),
      'group' => t('Facebook Tracking Pixel'),
    ];
  }

  /**
   * Implements setUp().
   */
  function setUp() {
    // Call the parent with an array of modules to enable for the test.
    parent::setUp(['facebook_tracking_pixel']);

    // Create a generic authenticated user.
    $this->web_user = $this->drupalCreateUser();

    // Create an admin user and log them in.
    $this->admin_user = $this->drupalCreateUser(['administer facebook tracking pixels']);
    $this->drupalLogin($this->admin_user);


    // Test Basecode ID.
    db_insert('facebook_tracking_pixel_base_codes')
      ->fields([
        'base_code_name' => 'Test Basecode',
        'base_code_fbid' => '123123123',
        'base_code_global' => 1,
        'weight' => 10,
      ])
      ->execute();

    // Retreieve the base id created.
    $this->basecodeid = db_select('facebook_tracking_pixel_base_codes', 'c')
      ->fields('c', ['base_code_id'])
      ->execute()
      ->fetchField();
  }

  /**
   * Create a basic page node using the node form.
   */
  public function testFacebookTrackingPixelNodeCreate() {
    // Create node to edit.
    $edit = [];
    $edit['alias'] = 'nodetest';
    $node = $this->drupalCreateNode($edit);
    $this->testFacebookTrackingPixelNodeNID = $node->nid;
    $this->testFacebookTrackingPixelNodeAlias = $edit['alias'];

    $this->assertTrue(!empty($node->nid), t('A basic page has been created with node ID %nid and title %title and path alias %alias', [
      '%nid' => $node->nid,
      '%title' => $node->title,
      '%alias' => $node->alias,
    ]), t('Facebook Tracking Pixel'));
  }

  /**
   * Attempt to add a path tracking item to the node created using path alias.
   */
  public function testFacebookTrackingPixelPathItemNodeExisting() {
    // Test to add a path item to the existing node created in this test.
    $edit = [];

    $edit['event_name'] = $this->randomName(8);
    $edit['event_path'] = $this->testFacebookTrackingPixelNodeAlias;
    $edit['event_base_code_id'] = $this->basecodeid;
    $edit['event_type[addtocart]'] = TRUE;
    $edit['event_type[lead]'] = TRUE;
    $this->drupalPost('admin/config/system/facebook_tracking_pixel/path/add', $edit, t('Save'));
    $this->assertText(t('Path tracking entry added.'));


  }

  /**
   *
   */
  public function testFacebookTrackingPixelPathItemNodeExistingDuplicateAlias() {
    // Attempt to add a path item for an existing path item with an alias address
    $edit = [];

  }

  /**
   *
   */
  public function testFacebookTrackingPixelPathItemNodeExistingDuplicateSysPath() {
    // Attempt to add a path item for an existing path item with a system path
    $edit = [];
  }

}
